openapi: 3.0.0
info:
  title: Task Manager API
  version: 1.0.0
  description: REST API for users, authentication, tasks, and analytics.

servers:
  - url: http://localhost:5000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/auth/register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username: { type: string }
                email: { type: string }
                password: { type: string }
      responses:
        '201': { description: Registered }

  /api/auth/login:
    post:
      summary: Login to receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [emailOrUsername, password]
              properties:
                emailOrUsername: { type: string }
                password: { type: string }
      responses:
        '200': { description: Logged in }

  /api/auth/logout:
    post:
      summary: Logout (client handles token deletion)
      responses:
        '200': { description: Logged out }

  /api/users/me:
    get:
      summary: Get your user profile
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: Profile info }

  /api/users:
    get:
      summary: Admin-only - Get all users
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: List of users }

  /api/tasks:
    get:
      summary: Get tasks (own, team, or all)
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: List of tasks }

    post:
      summary: Create a task
      security: [ { bearerAuth: [] } ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title: { type: string }
                description: { type: string }
                dueDate: { type: string, format: date }
                priority: { type: string }
      responses:
        '201': { description: Task created }

  /api/tasks/{id}:
    put:
      summary: Update task
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                status: { type: string }
                priority: { type: string }
      responses:
        '200': { description: Task updated }

    delete:
      summary: Delete task
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Task deleted }

  /api/tasks/{id}/assign:
    post:
      summary: Assign task (Manager/Admin only)
      security: [ { bearerAuth: [] } ]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [userId]
              properties:
                userId: { type: string }
      responses:
        '200': { description: Task assigned }

  /api/tasks/analytics:
    get:
      summary: Get task analytics for user or team
      security: [ { bearerAuth: [] } ]
      responses:
        '200': { description: Task analytics data }
